{"version":3,"sources":["webpack:///./src/pages/service.js","webpack:///./src/styles/sass.module.scss","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["ServicePage","state","indexedServices","componentDidMount","_","each","this","props","data","allServiceCategoriesCsv","edges","edge","node","name","description","services","allServicesCsv","category","push","setState","render","_this2","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","pageTitle","className","styles","textLimit","map","row","i","key","id","listStandard","item","short_name","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","spaceAbove","React","Component","ServicePageQuery","module","exports","container","headerContainer","headerTitle","footerContainer","introText","homepageRow","serviceDepartmentRow","departmentServiceRow","departmentName","departmentScore","departmentDateUpdated","departmentScoreNumber","serviceName","serviceStatus","serviceStatusIndicator","unknown","blocked","restricted","open","clearfix","listInline","listUnstyled","listInlineItem","spaceBelow","comparisonTitle","sortLinks","activeSortLink","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","gatsby_browser_entry","Footer","href","target","rel","Layout","Fragment","Helmet_default","title","site","siteMetadata","meta","content","lang","header","footer","_755544856","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e"],"mappings":"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","file":"component---src-pages-service-js-936714ed67641bde59cc.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport _ from 'lodash'\nimport { Link } from 'gatsby'\nimport styles from '../styles/sass.module.scss'\n\nimport Layout from '../components/layout'\n\nclass ServicePage extends React.Component {\n  state = {\n    indexedServices: {},\n  }\n\n  componentDidMount() {\n    let indexedServices = {}\n\n    // Create indexed object for each service by category\n    _.each(this.props.data.allServiceCategoriesCsv.edges, function(edge) {\n      indexedServices[edge.node.name] = {\n        description: edge.node.description,\n        services: [],\n      }\n    })\n\n    // Add services to the matching category\n    _.each(this.props.data.allServicesCsv.edges, function(edge) {\n      indexedServices[edge.node.category]['services'].push(edge.node)\n    })\n\n    this.setState({\n      indexedServices: indexedServices,\n    })\n  }\n\n  render() {\n    return (\n      <Layout pageTitle=\"Online services\">\n        <div className={styles.textLimit}>\n          <h1>Online services</h1>\n          <p>\n            Select an online service below to see which departments and agencies\n            are able to access it.\n          </p>\n\n          {this.props.data.allServiceCategoriesCsv.edges.map((row, i) => (\n            <div key={row.node.id}>\n              <h2>{row.node.description}</h2>\n\n              {/* Need to check if the array exists, because on first component load it hasn't been indexed (in the componentDidMount function) yet. */}\n              {this.state.indexedServices[row.node.name] && (\n                <ul className={styles.listStandard}>\n                  {this.state.indexedServices[row.node.name].services.map(\n                    (item, i) => (\n                      <li key={item.short_name}>\n                        <Link to={`/service/${item.short_name}/`}>\n                          {item.name}\n                        </Link>\n                      </li>\n                    )\n                  )}\n                </ul>\n              )}\n            </div>\n          ))}\n\n          <p className={styles.spaceAbove}>\n            If an online tool or service that you’re interested in isn’t\n            included in the list above, you can{' '}\n            <Link to=\"/suggest\">suggest adding it to the dataset</Link>.\n          </p>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default ServicePage\n\nexport const ServicePageQuery = graphql`\n  query {\n    allServicesCsv(filter: { hidden: { ne: \"1\" } }) {\n      edges {\n        node {\n          name\n          category\n          short_name\n          url\n          date_added\n          hidden\n          user_submitted\n          description\n        }\n      }\n    }\n    allServiceCategoriesCsv {\n      edges {\n        node {\n          id\n          name\n          description\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sass-module--container--RqDAe\",\"textLimit\":\"sass-module--textLimit--r3YNO\",\"headerContainer\":\"sass-module--headerContainer--A6Lx0\",\"headerTitle\":\"sass-module--headerTitle--2Xi7P\",\"footerContainer\":\"sass-module--footerContainer--1ehxn\",\"introText\":\"sass-module--introText--JHpU2\",\"homepageRow\":\"sass-module--homepageRow--1bW1t\",\"serviceDepartmentRow\":\"sass-module--serviceDepartmentRow--1JRYM\",\"departmentServiceRow\":\"sass-module--departmentServiceRow--2zk1o\",\"departmentName\":\"sass-module--departmentName--1HjYc\",\"departmentScore\":\"sass-module--departmentScore--1XvxX\",\"departmentDateUpdated\":\"sass-module--departmentDateUpdated--2441g\",\"departmentScoreNumber\":\"sass-module--departmentScoreNumber--1315-\",\"serviceName\":\"sass-module--serviceName--SRg2T\",\"serviceStatus\":\"sass-module--serviceStatus--1lh0l\",\"serviceStatusIndicator\":\"sass-module--serviceStatusIndicator--1fvmv\",\"unknown\":\"sass-module--unknown--K4jGG\",\"blocked\":\"sass-module--blocked--1dYgI\",\"restricted\":\"sass-module--restricted--1Akio\",\"open\":\"sass-module--open--1Vhug\",\"clearfix\":\"sass-module--clearfix--3s-RA\",\"listInline\":\"sass-module--listInline--3tYpw\",\"listUnstyled\":\"sass-module--listUnstyled--Cl2FG\",\"listInlineItem\":\"sass-module--listInlineItem--kXzaW\",\"listStandard\":\"sass-module--listStandard--22U1v\",\"spaceAbove\":\"sass-module--spaceAbove--3-bzF\",\"spaceBelow\":\"sass-module--spaceBelow--Ss43w\",\"comparisonTitle\":\"sass-module--comparisonTitle--25jZy\",\"sortLinks\":\"sass-module--sortLinks--1EZLz\",\"activeSortLink\":\"sass-module--activeSortLink--2UrOD\"};","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from '../styles/sass.module.scss'\n\nconst Header = ({ siteTitle }) => (\n  <div className={styles.headerContainer}>\n    <div className={styles.container}>\n      <div className={styles.headerTitle}>\n        <Link to=\"/\">{siteTitle}</Link>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from '../styles/sass.module.scss'\n\nconst Footer = () => (\n  <div className={styles.footerContainer}>\n    <div className={styles.container}>\n      <ul className={styles.listInline}>\n        <li className={styles.listInlineItem}>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li className={styles.listInlineItem}>\n          <Link to=\"/organization\">Departments</Link>\n        </li>\n        <li className={styles.listInlineItem}>\n          <Link to=\"/service\">Services</Link>\n        </li>\n      </ul>\n      <ul className={styles.listInline}>\n        <li className={styles.listInlineItem}>\n          <Link to=\"/suggest\">Suggest an update</Link>\n        </li>\n        <li className={styles.listInlineItem}>\n          <Link to=\"/scoring\">Scoring</Link>\n        </li>\n        <li className={styles.listInlineItem}>\n          <Link to=\"/about\">About this project</Link>\n        </li>\n        <li className={styles.listInlineItem}>\n          <a\n            href=\"https://github.com/isthisblocked/isthisblockedinmydepartment.ca\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            View on GitHub\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n)\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Footer from './footer'\n// import './layout.css'\nimport 'sanitize.css'\nimport styles from '../styles/sass.module.scss'\n\nconst Layout = ({ children, pageTitle }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={\n            pageTitle\n              ? pageTitle + ' - ' + data.site.siteMetadata.title\n              : data.site.siteMetadata.title\n          }\n          meta={[\n            {\n              name: 'description',\n              content:\n                'An unofficial dashboard of which online services are available or blocked by federal government departments in Canada.',\n            },\n            {\n              name: 'keywords',\n              content:\n                'Canada, public service, Government of Canada, digital government, information technology, public sector',\n            },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className={styles.container}>{children}</div>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}